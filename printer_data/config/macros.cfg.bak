#####################################################################
#   Macros
#####################################################################

#[gcode_macro G32]
#gcode:
#    LIGHTS_ON
#    BED_MESH_CLEAR
#    CG28                      ; Home if not homed to get everything turned on
#    QUAD_GANTRY_LEVEL         ; Level
    #G28 X Y                  ; Home the X and Y
#    CLEAN_NOZZLE
    #G0 X130 Y250 Z2 F9000     ; Move to brush
    #G0 X75 F750               ; Move across the brush
    #G0 X130 F750              ; Move across the brush
#    G28 Z                     ; Home the Z now that nozzle is clean
#    G0 X125 Y125 Z20 F6000    ; Return to center of bed

[gcode_macro G32]
gcode:
    LIGHTS_ON
    G28
    ATTACH_PROBE_LOCK
    BED_MESH_CLEAR
    QUAD_GANTRY_LEVEL
    G28 Z
    DOCK_PROBE_UNLOCK
   
#[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
#gcode:
 #     SAVE_GCODE_STATE NAME=start
#
#    M117 Starting warmup
 #   G1 Z20 F3000                       ; move nozzle away from bed
#    M117 Warmup
    #M190 S{BED}                        ; set bed temp and wait for it reach temp
   # M109 S{EXTRUDER|int}               ; M109 heat and wait for it to reach temp
#    G32                                ; Home XYZ and do QGL

 #   BED_MESH_PROFILE LOAD=default

  #  G1 Z5 F5000                        ; move head 5mm from bed surface
 #   M83                                ; Make the E relative independant of other axis
 #   M117 Purging
 #   PURGE_BUCKET
 #   G1 E2 F1500 # unretract
 #   M117 Starting Print
 #   RESTORE_GCODE_STATE NAME=start                  ; move nozzle away from bed
 #   STATUS_BUSY
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    LIGHTS_ON
    {% set bed_temp = params.BED|default(60)|float %}
    {% set extruder_temp = params.EXTRUDER|default(240)|float %}
    {% set print_settings_id = params.PROFILE|default('PROFILE NOT SET')|string %}
    {% set filament_settings_id = params.FILAMENT|default('FILAMENT NOT SET')|string %}
    G32                            ; home all axes
  #  GOTO_PURGE_BUCKET_XY           ; Goes above purge bucket
    STATUS_HEATING
    M117 Waiting for bed
    M190 S{bed_temp}               ; Waits for bed
    M117 Waiting for extruder
    M109 S{extruder_temp}          ; And then waits for extruder
    CLEAN_NOZZLE                   ; performs purge and clean
    STATUS_HOMING
    G28 Z  ; home the nozzle again (just z)
    CALIBRATE_Z
    G90                            ; absolute positioning
    G0 X125 Y125 F18000            ; move to the center not to touch the z-endstop when starting the print
    STATUS_PRINTING
    HYPERLAPSE ACTION=START
    M117 Printing
#    SET_FAN_SPEED FAN=nevermore SPEED=1
 #   PRESSURE_ADVANCE_SELECT PROFILE={print_settings_id} FILAMENT={filament_settings_id}


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-20.0 F1800                 ; retract filament
    HYPERLAPSE ACTION=STOP
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    M117 PRINT DONE!
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    STATUS_OFF
    LIGHTS_OFF

[gcode_macro LIGHTS_ON]
  gcode: 
    STATUS_READY
    SET_NOZZLE_LEDS_ON
    SET_PIN PIN=caselight VALUE=1.00
    SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

[gcode_macro LIGHTS_OFF]
  gcode:
    SET_PIN PIN=caselight VALUE=0.00
    SET_LOGO_LEDS_OFF
    SET_NOZZLE_LEDS_OFF
    SET_PIN PIN=caselight VALUE=0.00
    SET_LED LED=fysetc_mini12864 RED=0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=0 GREEN=0 BLUE=0 INDEX=3 
    
# Conditional G28 (home if not already homed)
[gcode_macro CG28]
gcode:
    LIGHTS_ON
    {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
    M117 Homing
    STATUS_HOMING
    G28
    {% endif %}

#[gcode_macro M141]
#default_parameter_S: 0
#default_parameter_P: 0
#gcode:
#    SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" target={S}

[gcode_macro PURGE_BUCKET]
gcode:
    LIGHTS_ON
    SAVE_GCODE_STATE NAME=PURGE
    STATUS_CLEANING
    m117 Cleaning
    G90                    ; absolute
    G0 X75 Y250 Z2         ; go to purge bucket
    G1 X25 E10 F500        ; purge some filament into bucket
    G1 X75 E3 F500         ; purge some filament into bucket
    G0 X120 Y250 F750      ; move across purge brush
    G1 E-2 F500            ; Retract a little
    G1 Z3                  ; Raise and return
    RESTORE_GCODE_STATE NAME=PURGE
    STATUS_READY

[gcode_macro test_speed_fast]
gcode:
        LIGHTS_ON
        G28 X0 Y0
        GET_POSITION
        G1 X0 Y0     F27000
        G1 X250 Y250 F27000
        G1 X0 Y0     F27000
        G1 X250 Y250 F27000

        G1 X0 Y250 F36000

        G1 X250 Y0 F27000
        G1 X0 Y250 F27000
        G1 X250 Y0 F27000
        G1 X0 Y250 F27000

        G1 X0 Y0 F36000
        G1 X250 Y0 F36000
        G1 X250 Y250 F36000
        G1 X0 Y250 F36000
        G1 X0 Y0 F36000
        G28 X0 Y0
        GET_POSITION

#[gcode_button activity_light]
#pin: ^!EXP1_2
#press_gcode: 
#  LIGHTS_ON

[gcode_macro QGL]
gcode:
    BED_MESH_CLEAR
    QUAD_GANTRY_LEVEL
    
[gcode_macro BMC]
gcode:
    BED_MESH_CALIBRATE

# Just a shortcut to turn EVERYTHING off with one command (beds, heaters, motors, lights)
[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off
    SET_FAN_SPEED FAN=Exhaust SPEED=0    ; turn exhaust fan off
    SET_FAN_SPEED FAN=BedOuter SPEED=0   ; bed fan off
    SET_FAN_SPEED FAN=BedInner SPEED=0   ; bed fan off
    SET_PIN PIN=caselight VALUE=0        ; turn light off
    SET_NOZZLE_LEDS_BY_NAME COLOR="OFF"  ; turn nozzle LEDs off
    SET_LOGO_LEDS_BY_NAME COLOR="WHITE"  ; set logo LED back to white

######################### FILAMENT #########################

[gcode_macro UNLOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=UNLOADFILAMENT
    M83                                   ; set extruder to relative
    G1 E10 F600                           ; extrude a little to soften tip 
    G1 E-120 F1800                        ; retract filament completely
    RESTORE_GCODE_STATE NAME=UNLOADFILAMENT

[gcode_macro LOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=LOADFILAMENT
    M83 ; set extruder to relative
    G1 E90 F600
    RESTORE_GCODE_STATE NAME=LOADFILAMENT
   
[gcode_macro HOT_UNLOAD]
gcode:
    # Parameters
    {% set t = params.T|default(240)|int %}
    
    M104 S{t}
    PARKFRONT
    M109 S{t}
    UNLOAD_FILAMENT
    
[gcode_macro HOT_LOAD]
gcode:
    # Parameters
    {% set t = params.T|default(240)|int %}
    
    M104 S{t}
    PARKFRONT
    M109 S{t}
    LOAD_FILAMENT

######################### PARKING #########################

# Park front center
[gcode_macro PARKFRONT]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z/2} F19500        
    RESTORE_GCODE_STATE NAME=PARKFRONT
    
# Park front center, but low down
[gcode_macro PARKFRONTLOW]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z20 F19500                                     
    RESTORE_GCODE_STATE NAME=PARKFRONT
    
# Park top rear left
[gcode_macro PARKREAR]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKREAR
    G90
    G0 X{printer.toolhead.axis_minimum.x+10} Y{printer.toolhead.axis_maximum.y-10} Z{printer.toolhead.axis_maximum.z-50} F19500     
    RESTORE_GCODE_STATE NAME=PARKREAR

# Park center of build volume
[gcode_macro PARKCENTER]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKCENTER
    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F19500    
    RESTORE_GCODE_STATE NAME=PARKCENTER
    
# Park 15mm above center of bed
[gcode_macro PARKBED]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKBED
    G90
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z15 F19500                                     
    RESTORE_GCODE_STATE NAME=PARKBED

######################### CONDITIONAL HOMING #########################

# Conditional G28 (home if not already homed)
[gcode_macro CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}
    
# Conditional G28 (home if not already homed)
[gcode_macro XYCG28]
gcode:
    {% if "xy" not in printer.toolhead.homed_axes %}
        G28 X Y
    {% endif %}

[gcode_macro ZCG28]
gcode:
    {% if "z" not in printer.toolhead.homed_axes %}
        G28 Z
    {% endif %}

# Replace M109 (Wait for Hotend Temperature) with TEMPERATURE_WAIT so we don't have to wait for PID to level off.
[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}

    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

# Calls my "OFF" macro to shut off everything (lights etc), turns off LCD lighting, then shuts down the Pi
[gcode_macro SHUTDOWN]
gcode:
    LCDRGB R=0 G=0 B=0
    OFF
    {action_respond_info('action:poweroff')}          ; OctoPrint compatible
    {action_call_remote_method("shutdown_machine")}   ; Moonraker compatible

